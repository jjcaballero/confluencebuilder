<dl>
<dt><dt><em>class </em><strong><code>Nutshell</code></strong></dt>
</dt>
<dd><p>With a little bit of a elaboration, should you feel it necessary. </p>
<h1>Public Types</h1>
<dl>
<dt><dt><em>enum </em><strong><code>Tool</code></strong></dt>
</dt>
<dd><p>Our tool set. </p>
<p>The various tools we can opt to use to crack this particular nut </p>
<p><em>Values:</em></p>
<dl>
<dt><dt><strong><code>kHammer</code></strong> = 0</dt>
</dt>
<dd><p>What? It does the job. </p>
</dd>
</dl>
<dl>
<dt><dt><strong><code>kNutCrackers</code></strong></dt>
</dt>
<dd><p>Boring. </p>
</dd>
</dl>
<dl>
<dt><dt><strong><code>kNinjaThrowingStars</code></strong></dt>
</dt>
<dd><p>Stealthy. </p>
</dd>
</dl>
</dd>
</dl>
<h1>Public Functions</h1>
<dl>
<dt><dt><strong><code>Nutshell</code></strong>()</dt>
</dt>
<dd><p><ac:link ac:anchor="classNutshell">
<ac:link-body>Nutshell</ac:link-body>
</ac:link> constructor. </p>
</dd>
</dl>
<dl>
<dt><dt><strong><code>~Nutshell</code></strong>()</dt>
</dt>
<dd><p><ac:link ac:anchor="classNutshell">
<ac:link-body>Nutshell</ac:link-body>
</ac:link> destructor. </p>
</dd>
</dl>
<dl>
<dt><dt>void <strong><code>crack</code></strong>(<em><ac:link ac:anchor="_CPPv4N8Nutshell4ToolE">
<ac:link-body>Tool</ac:link-body>
</ac:link> <em>tool</em></em>)</dt>
</dt>
<dd><p>Crack that shell with specified tool</p>
<p><dl>
<dt><strong>Parameters</strong></dt>
<dd>
<ul>
<li>
<p><code>tool</code>: - the tool with which to crack the nut </p>
</li>
</ul>
</dd>
</dl>
</p>
</dd>
</dl>
<dl>
<dt><dt>bool <strong><code>isCracked</code></strong>()</dt>
</dt>
<dd><p><dl>
<dt><strong>Return</strong></dt>
<dd>
<p>Whether or not the nut is cracked </p>
</dd>
</dl>
</p>
</dd>
</dl>
</dd>
</dl>
